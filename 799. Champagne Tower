class Solution {
    public double champagneTower(int poured, int query_row, int query_glass) {
        
        double[][] dp = new double[102][102];
        
        dp[0][0] = (double) poured;
        
        for(int r = 0; r <= query_row; r++)
        {
            for(int c = 0; c <= r; c++)
            {
                double q = (dp[r][c] - 1.0)/2.0;
                
                
                if(q > 0)
                {
                    dp[r+1][c] += q;
                    dp[r+1][c+1] += q;
                }
            }
        }
        
        return Math.min(1, dp[query_row][query_glass]);
        
    }
}

/*
In general, if a glass has flow-through X, then Q = (X - 1.0) / 2.0 quantity of champagne will equally flow left and right. We can simulate the entire pour for 100 rows of glasses. A glass at (r, c) will have excess champagne flow towards (r+1, c) and (r+1, c+1).
*/
