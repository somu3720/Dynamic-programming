class Solution {
    public int longestStrChain(String[] words) {
        
        Arrays.sort(words,(a,b) ->a.length() - b.length());
        int res = 0;
        Map<String, Integer> dp = new HashMap<>();
        
        for(String word : words)
        {
            dp.put(word, 1);
            for(int i = 0; i < word.length(); i++)
            {
                StringBuilder currWord = new StringBuilder(word);
                String nextWord = currWord.deleteCharAt(i).toString();
                
                //check if value is already present in map
                if(dp.containsKey(nextWord))
                    dp.put(word, Math.max(dp.get(word), dp.get(nextWord)+1));
            }
            
            res = Math.max(res,dp.get(word));
        }
        
        return res;
    }
}

//https://www.youtube.com/watch?v=pXG3uE_KqZM
