class Solution {
    public int minCost(int[][] costs) {
     
        int n = costs.length;
        
        int dp[][] = new int[n][3];
        
        dp[0][0] = costs[0][0];   // red
        
        dp[0][1] = costs[0][1];  // green
        
        dp[0][2] = costs[0][2]; // blue
        
        for(int i = 1; i < costs.length; i++)
        {
            dp[i][0] =  costs[i][0] + Math.min(dp[i-1][1], dp[i-1][2]);  // red
            
            dp[i][1] =  costs[i][1] + Math.min(dp[i-1][0], dp[i-1][2]);  // green
            
            dp[i][2] =  costs[i][2] + Math.min(dp[i-1][1], dp[i-1][0]);  // red
        }
        
        return Math.min(dp[n-1][0], Math.min(dp[n-1][1], dp[n-1][2]));
       
    }
    
}    

//https://www.youtube.com/watch?v=kh48JLieeW8&t=77s
