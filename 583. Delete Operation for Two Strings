class Solution {
    public int minDistance(String word1, String word2) {
        int dp[][] = new int[word1.length() + 1][word2.length() + 1];
        
        return word1.length() + word2.length() - 2*lcs(word1, word2, word1.length(),       word2.length(), dp);
        
    }
    
    public int lcs(String s1, String s2, int m, int n, int[][] dp)
    {
        if(m == 0 || n == 0)
            return 0;
        
        if(dp[m][n] > 0)
            return dp[m][n];
        
        if(s1.charAt(m-1) == s2.charAt(n-1))
            dp[m][n] = 1 + lcs(s1, s2, m-1, n-1, dp);
        else
            dp[m][n] = Math.max(lcs(s1, s2, m, n-1, dp), lcs(s1, s2, m-1, n, dp));
        
        return dp[m][n];
    }
}

//https://www.youtube.com/watch?v=-fx6aDxcWyg
