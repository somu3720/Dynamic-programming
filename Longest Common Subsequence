class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        
        int n = text1.length();
        int m = text2.length();
        
        
        return LCS(text1,text2,n,m);
        
    }
    
    int LCS(String X,String Y,int n,int m)
    {
        int t[][] = new int[n+1][m+1];
        
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
                if(i==0||j==0)
                    t[i][j] = 0;
            }
        }
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(X.charAt(i-1)==Y.charAt(j-1))
                    t[i][j] = 1 + t[i-1][j-1];
                
                else 
                    t[i][j] = Math.max(t[i-1][j], t[i][j-1]);
            }
        }
        
        
        return t[n][m];
    }
}
